import "src/stdlib/complete-stdlib.xtnd";

main(args) {
  welcome := "NBA True Shooting Percentage\n----------------------------";
  data := parseString(read(open("tsp_data","r"),0));

  // Calculates TSP for each player
  [10,2] players;
  players[:,0:1] = data[[0],[0]];
  players[:,1:] = calculate_tsp(data[[0],1],data[[0],2],data[[0],3]);

  // Calculates which player has the highest TSP
  player := highest_tsp(players);

  return
    print_endline(welcome) ->
    print_endline(players[0,0] + ": " + to_string(players[0,1])) ->
    print_endline(players[1,0] + ": " + to_string(players[1,1])) ->
    print_endline(players[2,0] + ": " + to_string(players[2,1])) ->
    print_endline(players[3,0] + ": " + to_string(players[3,1])) ->
    print_endline(players[4,0] + ": " + to_string(players[4,1])) ->
    print_endline(players[5,0] + ": " + to_string(players[5,1])) ->
    print_endline(players[6,0] + ": " + to_string(players[6,1])) ->
    print_endline(players[7,0] + ": " + to_string(players[7,1])) ->
    print_endline(players[8,0] + ": " + to_string(players[8,1])) ->
    print_endline(players[9,0] + ": " + to_string(players[9,1])) ->
    print_endline("----------------------------") ->
    print_endline("The player with the highest True Shooting Percentage is " + to_string(player[0,0]) + " with a TSP of " + to_string(player[0,1]) + "!");
}

calculate_tsp(pts,fga,fta) {
  tsp := pts / (2.0 * (fga + (0.44 * fta)));
  return tsp;
}

highest_tsp([m,n] players) {
  [m,1] tsp_ranking;
  tsp_ranking[0,0] = players[0,:];
  tsp_ranking[1:,:] = (players[[0],1] > tsp_ranking[[-1],0][1]) ?  players[[0],:] : tsp_ranking[[-1],0];
  return tsp_ranking[m-1,0];
}
